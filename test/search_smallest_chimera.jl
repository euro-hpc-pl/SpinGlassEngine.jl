@testset "Chimera-like instance has the correct low energy spectrum" begin
    m = 2
    n = 2
    t = 2
    L = n * m * t

    β = 1.

    bond_dim = 16
    num_states = 2^8

    # energies

    exact_energies =
    [ 
    -7.25, -6.75, -6.65, -6.35, -6.1499999999999995, -5.85, -5.75, -5.65, -5.55, -5.25, -5.25, -4.949999999999999, -4.75, -4.6499999999999995, -4.549999999999999, -4.35, -4.35,
    -4.25, -4.25, -3.9499999999999997, -3.65, -3.65, -3.65, -3.4500000000000006, -3.350000000000001, -3.35, -3.349999999999999, -3.2500000000000004, -3.2500000000000004, 
    -3.2500000000000004, -3.15, -3.15, -3.15, -3.0500000000000003, -3.0499999999999994, -2.9500000000000006, -2.9499999999999997, -2.85, -2.85, -2.7500000000000004, 
    -2.7500000000000004, -2.7499999999999996, -2.65, -2.65, -2.5500000000000003, -2.55, -2.5499999999999994, -2.45, -2.4499999999999997, -2.35, -2.35, -2.35, -2.349999999999999, 
    -2.2500000000000004, -2.25, -2.1500000000000004, -2.15, -2.15, -2.15, -2.1499999999999995, -2.0500000000000003, -2.0500000000000003, -2.05, -2.05, -1.9500000000000006, -1.85, 
    -1.85, -1.85, -1.85, -1.85, -1.8499999999999999, -1.8499999999999999, -1.8499999999999999, -1.7500000000000004, -1.75, -1.75, -1.7499999999999993, -1.4499999999999997, 
    -1.4499999999999995, -1.4499999999999995, -1.4499999999999995, -1.3499999999999999, -1.25, -1.25, -1.15, -1.1499999999999997, -1.0499999999999998, -0.9500000000000001, 
    -0.8500000000000009, -0.85, -0.8499999999999998, -0.8499999999999998, -0.8499999999999998, -0.7500000000000003, -0.7500000000000001, -0.7500000000000001, -0.7500000000000001, 
    -0.7499999999999996, -0.6500000000000002, -0.65, -0.6499999999999998, -0.5500000000000004, -0.5500000000000002, -0.55, -0.55, -0.5499999999999999, -0.5499999999999999, 
    -0.5499999999999997, -0.4500000000000003, -0.45000000000000007, -0.44999999999999984, -0.4499999999999996, -0.3500000000000002, -0.35, -0.2500000000000001, -0.25, -0.25, 
    -0.24999999999999992, -0.24999999999999947, -0.15000000000000027, -0.05000000000000018, -0.049999999999999906, -0.049999999999999906, 0.04999999999999974, 0.049999999999999906, 
    0.14999999999999983, 0.15, 0.15000000000000044, 0.24999999999999964, 0.24999999999999992, 0.25, 0.2500000000000001, 0.2500000000000002, 0.34999999999999976, 0.35, 0.35, 
    0.44999999999999984, 0.45000000000000007, 0.5499999999999999, 0.5499999999999999, 0.5500000000000002, 0.5500000000000002, 0.6499999999999998, 0.6499999999999998, 
    0.6499999999999999, 0.6500000000000002, 0.7499999999999999, 0.7499999999999999, 0.75, 0.7500000000000004, 0.8499999999999998, 0.8499999999999998, 0.8499999999999998, 
    0.8499999999999998, 0.85, 0.85, 0.8500000000000002, 0.8500000000000002, 0.9499999999999996, 0.9500000000000001, 0.9500000000000003, 1.05, 1.05, 1.0500000000000003, 
    1.0500000000000003, 1.0500000000000003, 1.15, 1.15, 1.2499999999999993, 1.25, 1.2500000000000002, 1.2500000000000002, 1.2500000000000004, 1.3499999999999996, 1.35, 
    1.4499999999999995, 1.4500000000000004, 1.5499999999999998, 1.5499999999999998, 1.5499999999999998, 1.6499999999999997, 1.65, 1.6500000000000004, 1.6500000000000006, 
    1.7500000000000002, 1.7500000000000002, 1.85, 1.85, 1.8500000000000008, 1.9499999999999997, 1.9500000000000002, 1.9500000000000002, 1.9500000000000002, 1.9500000000000004, 
    2.05, 2.05, 2.0500000000000003, 2.0500000000000003, 2.15, 2.15, 2.1500000000000004, 2.1500000000000004, 2.1500000000000004, 2.2500000000000004, 2.3499999999999996, 2.35, 2.35, 
    2.350000000000001, 2.4499999999999997, 2.4499999999999997, 2.4499999999999997, 2.5500000000000003, 2.65, 2.65, 2.6500000000000004, 2.7499999999999996, 2.7500000000000004, 
    2.849999999999999, 2.85, 2.85, 3.0499999999999994, 3.0500000000000003, 3.0500000000000003, 3.2499999999999996, 3.35, 3.35, 3.35, 3.35, 3.35, 3.449999999999999, 3.5500000000000003, 
    3.5500000000000003, 3.5500000000000003, 3.7499999999999996, 3.9499999999999997, 3.9499999999999997, 3.9499999999999997, 3.9499999999999997, 4.05, 4.1499999999999995, 4.15, 4.25, 
    4.449999999999998, 4.449999999999999, 4.6499999999999995, 4.6499999999999995, 4.6499999999999995, 4.65, 4.75, 4.75, 4.85, 5.35, 5.35, 5.3500000000000005, 5.85, 6.050000000000001
    ]

    # degenerate fg solutions
    #=
    exact_states =
    [   # E =-16.4
        [
        [1, 4, 5, 1, 2, 2, 1, 1, 1, 4, 2, 1], [1, 4, 7, 1, 2, 2, 1, 1, 1, 4, 2, 1],
        [1, 4, 5, 1, 2, 2, 1, 1, 1, 4, 6, 1], [1, 4, 7, 1, 2, 2, 1, 1, 1, 4, 6, 1]
        ],
        # E =-16.1
        [
        [2, 5, 4, 1, 1, 3, 1, 1, 1, 5, 7, 1], [2, 5, 2, 1, 1, 3, 1, 1, 1, 5, 3, 1],
        [2, 5, 4, 1, 1, 3, 1, 1, 1, 5, 3, 1], [2, 5, 2, 1, 1, 3, 1, 1, 1, 5, 7, 1]
        ],
        # E = -15.9
        [
        [1, 4, 1, 1, 2, 2, 1, 1, 1, 4, 2, 1], [1, 4, 3, 1, 2, 2, 1, 1, 1, 4, 2, 1],
        [1, 4, 6, 1, 2, 2, 1, 1, 1, 4, 2, 1], [1, 4, 3, 1, 2, 2, 1, 1, 1, 4, 6, 1],
        [1, 4, 1, 1, 2, 2, 1, 1, 1, 4, 6, 1], [1, 4, 6, 1, 2, 2, 1, 1, 1, 4, 6, 1]
        ],
        # E = -15.6
        [
        [2, 5, 3, 1, 1, 3, 1, 1, 1, 5, 3, 1], [2, 5, 3, 1, 1, 3, 1, 1, 1, 5, 7, 1],
        [2, 5, 8, 1, 1, 3, 1, 1, 1, 5, 3, 1], [2, 5, 6, 1, 1, 3, 1, 1, 1, 5, 7, 1],
        [2, 5, 6, 1, 1, 3, 1, 1, 1, 5, 3, 1], [2, 5, 8, 1, 1, 3, 1, 1, 1, 5, 7, 1]
        ],
        # E = -15.4
        [
        [1, 4, 7, 1, 2, 2, 1, 1, 1, 2, 6, 1], [1, 4, 5, 1, 2, 2, 1, 1, 1, 2, 6, 1]
        ],
    ]
    =#
    #=
    deg = Dict(
        1 => 1, 2 => 1, 3 => 1, 4 => 1,
        #
        5 => 2, 6 => 2, 7 => 2, 8 => 2,
        #
        9 => 3, 10 => 3, 11 => 3, 12 => 3, 13 => 3, 14 => 3,
        #
        15 => 4, 16 => 4, 17 => 4, 18 => 4, 19 => 4, 20 => 4,
        #
        21 => 5, 22 => 5,
    )
    =#
    instance = "$(@__DIR__)/instances/pathological/chim_$(m)_$(n)_$(t).txt"

    ig = ising_graph(instance)

    fg = factor_graph(
        ig,
        spectrum=full_spectrum,
        cluster_assignment_rule=super_square_lattice((m, n, t))
    )

    params = MpsParameters(bond_dim, 1E-8, 4)
    search_params = SearchParameters(num_states, 0.0)

    for Strategy ∈ (SVDTruncate, ), Sparsity ∈ (Dense, ) # MPSAnnealing
        println("Strategy ", Strategy)
        println("Sparsity ", Sparsity)
        for Layout ∈ (EnergyGauges, ) #GaugesEnergy, EngGaugesEng
            println("Layout ", Layout)
            for transform ∈ all_lattice_transformations #[[4,8]]] errors are here

                network = PEPSNetwork{Square{Layout}, Sparsity}(m, n, fg, transform)
                contractor = MpsContractor{Strategy}(network, [β/8., β/4., β/2., β], params)
                sol = low_energy_spectrum(contractor, search_params)

                @test sol.energies ≈ exact_energies
                ig_states = decode_factor_graph_state.(Ref(fg), sol.states)
                @test sol.energies ≈ energy.(Ref(ig), ig_states)

                norm_prob = exp.(sol.probabilities .- sol.probabilities[1])
                exact_norm_prob = exp.(-β .* (sol.energies .- sol.energies[1]))
                @test norm_prob ≈ exact_norm_prob
                clear_memoize_cache()
            end
        end
    end
end
